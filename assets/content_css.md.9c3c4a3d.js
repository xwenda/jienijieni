import{_ as s}from"./chunks/navigator.2cd5103f.js";import{o as a,c as l,E as n,X as o}from"./chunks/framework.647aedcc.js";const p=o(`<h1 id="css" tabindex="-1">css <a class="header-anchor" href="#css" aria-label="Permalink to &quot;css&quot;">​</a></h1><h2 id="常用选择器" tabindex="-1">常用选择器 <a class="header-anchor" href="#常用选择器" aria-label="Permalink to &quot;常用选择器&quot;">​</a></h2><h3 id="通配选择器" tabindex="-1">* (通配选择器) <a class="header-anchor" href="#通配选择器" aria-label="Permalink to &quot;* (通配选择器)&quot;">​</a></h3><ul><li><p>星号可以用来定义页面的所有元素。许多开发者会使用这个技巧来把<code>margin</code>和<code>padding</code>都设为0。在快速开发测试中这种设置固然是好的，但我建议绝对不要在最终的产品代码中使用。因为会给浏览器增加大量不必要的<code>负荷</code>。</p></li><li><p>星形<code>*</code>也可以用于子元素选择器（child selectors）。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">#</span><span style="color:#F78C6C;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid black</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这段代码会定义<code>#container</code> <code>div</code>所有子元素的样式。跟上面一样，如果可以尽量避免使用这个方法。</p></li></ul><h3 id="x-id选择器" tabindex="-1">#X (id选择器) <a class="header-anchor" href="#x-id选择器" aria-label="Permalink to &quot;#X (id选择器)&quot;">​</a></h3><ul><li>使用＃号作为前缀可以选择该<code>id</code>的元素。这是最常见的用法，但使用<code>id</code>选择器时要谨慎。</li></ul><h3 id="x-类选择器" tabindex="-1">.X (类选择器) <a class="header-anchor" href="#x-类选择器" aria-label="Permalink to &quot;.X (类选择器)&quot;">​</a></h3><ul><li>这是<code>class</code>类选择器。<code>id</code>和<code>class</code>类选择器的区别是，类选择器可以定义多个元素。当你想定义一组元素的样式时可以使用<code>class</code>选择器。另外，可以使用<code>id</code>选择器来定义某一个特定的元素。</li></ul><h3 id="x-y-后代选择器" tabindex="-1">X Y (后代选择器) <a class="header-anchor" href="#x-y-后代选择器" aria-label="Permalink to &quot;X Y (后代选择器)&quot;">​</a></h3><ul><li>如果你的选择器看起来像<code>X Y Z A B.error</code>这样就错了。问问自己是否真的需要加入这么多<strong>负荷</strong>。</li></ul><h3 id="x-元素选择器" tabindex="-1">X (元素选择器) <a class="header-anchor" href="#x-元素选择器" aria-label="Permalink to &quot;X (元素选择器)&quot;">​</a></h3><ul><li>假如你想定义页面里所有<code>type</code>标签类型一样的元素，而不使用<code>id</code>或者<code>class</code>呢？可以简单地使用元素选择器。比如选择所有的无序列表，可以用<code>ul {}</code>。</li></ul><h3 id="x-visited-x-link-链接选择器" tabindex="-1">X:visited / X:link (链接选择器) <a class="header-anchor" href="#x-visited-x-link-链接选择器" aria-label="Permalink to &quot;X:visited / X:link (链接选择器)&quot;">​</a></h3><ul><li><p>我们使用<code>:link</code>伪类来定义所有还没点击的链接。</p></li><li><p>另外还有<code>:visited</code>伪类可以让我们给<em>曾经</em>点击过或者<em>访问过</em>的链接添加样式。</p></li></ul><h3 id="x-y-邻近选择器" tabindex="-1">X + Y (邻近选择器) <a class="header-anchor" href="#x-y-邻近选择器" aria-label="Permalink to &quot;X + Y (邻近选择器)&quot;">​</a></h3><ul><li>这是邻近元素选择器，<strong>只会</strong>选中紧接在另一个元素后的元素</li></ul><h3 id="x-y-直接后代选择器" tabindex="-1">X &gt; Y (直接后代选择器) <a class="header-anchor" href="#x-y-直接后代选择器" aria-label="Permalink to &quot;X &gt; Y (直接后代选择器)&quot;">​</a></h3><ul><li>只会选中直接后代</li></ul><h3 id="x-y-兄弟选择器" tabindex="-1">X ~ Y (兄弟选择器) <a class="header-anchor" href="#x-y-兄弟选择器" aria-label="Permalink to &quot;X ~ Y (兄弟选择器)&quot;">​</a></h3><ul><li>兄弟选择器，在X后面的Y元素都会被选中</li></ul><h3 id="x-title-属性选择器" tabindex="-1">X[title] (属性选择器) <a class="header-anchor" href="#x-title-属性选择器" aria-label="Permalink to &quot;X[title] (属性选择器)&quot;">​</a></h3><ul><li><p>属性选择器</p><ul><li><p>X[href=&quot;foo&quot;] //指向具体</p></li><li><p>X[href*=&quot;nettuts&quot;] //正则匹配</p></li><li><p>X[href^=&quot;http&quot;] //正则匹配前缀</p></li><li><p>X[href$=&quot;.jpg&quot;] //正则匹配结尾</p></li><li><p>X[data-*=&quot;foo&quot;] //匹配所有含有<code>data-</code>的元素</p></li><li><p>X[foo~=&quot;bar&quot;] // 波浪符号（<code>~</code>）可以让你定义取值带有空格的属性。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;a href=&quot;path/to/image.jpg&quot; data-info=&quot;external image&quot;&gt; Click Me, Fool &lt;/a&gt;</span></span></code></pre></div><p>使用上面的代码，现在我们可以用波浪号的技巧来定义包含其中一个值的元素。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* Target data-info attr that contains the value &quot;external&quot; */</span></span>
<span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">data-info</span><span style="color:#89DDFF;">~=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">external</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* And which contain the value &quot;image&quot; */</span></span>
<span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">data-info</span><span style="color:#89DDFF;">~=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">image</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li></ul></li></ul><h3 id="x-checked-选中选择器" tabindex="-1">X:checked (选中选择器) <a class="header-anchor" href="#x-checked-选中选择器" aria-label="Permalink to &quot;X:checked (选中选择器)&quot;">​</a></h3><ul><li>这个伪类可以用来定义**选中（checked）**的元素</li></ul><h3 id="x-after-伪类选择器" tabindex="-1">X:after (伪类选择器) <a class="header-anchor" href="#x-after-伪类选择器" aria-label="Permalink to &quot;X:after (伪类选择器)&quot;">​</a></h3><ul><li><p>伪类<code>before</code>和<code>after</code>属于高级用法。几乎每一天都有人找到高效而有创意的新用法。这两个伪类可以在元素前面和后面添加内容。</p></li><li><p>许多人认识到这两个伪类是因为这是清除浮动的技巧。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">after</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">clear</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> both</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">visibility</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> hidden</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;"> *</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> inline-block</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;"> _height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这个例子利用<code>:after</code>在元素后面添加间隔和清除浮动的元素。这是你值得拥有的高级技巧，尤其是当<code>overflow: hidden;</code>不管用的时候。</p><div class="danger custom-block"><p class="custom-block-title">提示</p><p>根据CSS3选择器规范，语法上你应该使用双冒号来<code>::</code>来指定伪类。然而，为了兼容多数浏览器，单冒号也被承认。实际上，在目前的情况下，使用单冒号的选择是明智的。</p></div></li></ul><h3 id="x-hover-交互选择器" tabindex="-1">X:hover (交互选择器) <a class="header-anchor" href="#x-hover-交互选择器" aria-label="Permalink to &quot;X:hover (交互选择器)&quot;">​</a></h3><ul><li>用户交互伪类<code>user action pseudo class</code></li></ul><h3 id="x-not-selector-否定伪类选择器" tabindex="-1">X:not(selector) (否定伪类选择器) <a class="header-anchor" href="#x-not-selector-否定伪类选择器" aria-label="Permalink to &quot;X:not(selector) (否定伪类选择器)&quot;">​</a></h3><ul><li><p>比如，我希望选中所有的div元素，除了一个<code>id</code>为<code>container</code>的div</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">not</span><span style="color:#89DDFF;">(#</span><span style="color:#F78C6C;">container</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> blue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">// 不建议</span></span>
<span class="line"><span style="color:#FFCB6B;">*</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">not</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">p</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> green</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li></ul><h3 id="x-pseudoelement-伪元素选择器" tabindex="-1">X::pseudoElement (伪元素选择器) <a class="header-anchor" href="#x-pseudoelement-伪元素选择器" aria-label="Permalink to &quot;X::pseudoElement (伪元素选择器)&quot;">​</a></h3><ul><li><p>伪元素（用<code>::</code>表示）来定义某些片段元素</p></li><li><p>要记住的是这只能用于块状（block）元素</p><ul><li><p>下面匹配段落的第一个字母</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">p</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">first-letter</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">float</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> left</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2em</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">font-weight</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> bold</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">font-family</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> cursive</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">padding-right</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li><li><p>匹配段落的第一行</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">p</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">first-line</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">font-weight</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> bold</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.2em</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li></ul></li></ul><h3 id="x-nth-child-n-队列选择器" tabindex="-1">X:nth-child(n) (队列选择器) <a class="header-anchor" href="#x-nth-child-n-队列选择器" aria-label="Permalink to &quot;X:nth-child(n) (队列选择器)&quot;">​</a></h3><ul><li>队列元素选择器</li><li>要注意的是<code>nth-child</code>指序列里的第n个元素，从1数起。如果你想匹配列表里的第二个元素，可以使用<code>li:nth-child(2)</code>。</li><li>我们甚至可以使用这种方法来选择一系列的子元素。比如<code>li:nth-child(4n)</code>可以选择排在4的倍数的元素。</li><li>奇数：odd，偶数even</li></ul><h3 id="x-nth-last-child-n-n-最后选择器" tabindex="-1">X:nth-last-child(n) (n ~ 最后选择器) <a class="header-anchor" href="#x-nth-last-child-n-n-最后选择器" aria-label="Permalink to &quot;X:nth-last-child(n) (n ~ 最后选择器)&quot;">​</a></h3><ul><li>匹配第N到最后一个元素</li></ul><h3 id="x-nth-of-type-n-元素类型选择器" tabindex="-1">X:nth-of-type(n) (元素类型选择器) <a class="header-anchor" href="#x-nth-of-type-n-元素类型选择器" aria-label="Permalink to &quot;X:nth-of-type(n) (元素类型选择器)&quot;">​</a></h3><ul><li>元素的类型<code>type</code>来选择，而不是子元素<code>child</code>。</li></ul><h3 id="x-nth-last-of-type-n-倒数选择器" tabindex="-1">X:nth-last-of-type(n) (倒数选择器) <a class="header-anchor" href="#x-nth-last-of-type-n-倒数选择器" aria-label="Permalink to &quot;X:nth-last-of-type(n) (倒数选择器)&quot;">​</a></h3><ul><li>倒数第n个元素</li></ul><h3 id="x-first-child-第一子元素选择器" tabindex="-1">X:first-child (第一子元素选择器) <a class="header-anchor" href="#x-first-child-第一子元素选择器" aria-label="Permalink to &quot;X:first-child (第一子元素选择器)&quot;">​</a></h3><ul><li>选中母元素的第一个子元素，常常用于去掉第一个或最后一个元素的边框。</li></ul><h3 id="x-last-child-最后子元素选择器" tabindex="-1">X:last-child (最后子元素选择器) <a class="header-anchor" href="#x-last-child-最后子元素选择器" aria-label="Permalink to &quot;X:last-child (最后子元素选择器)&quot;">​</a></h3><ul><li>匹配最后一个子元素</li></ul><h3 id="x-only-child-唯一子元素选择器" tabindex="-1">X:only-child (唯一子元素选择器) <a class="header-anchor" href="#x-only-child-唯一子元素选择器" aria-label="Permalink to &quot;X:only-child (唯一子元素选择器)&quot;">​</a></h3><ul><li>匹配唯一的子元素</li></ul><h3 id="x-only-of-type-唯一子元素类型选择器" tabindex="-1">X:only-of-type (唯一子元素类型选择器) <a class="header-anchor" href="#x-only-of-type-唯一子元素类型选择器" aria-label="Permalink to &quot;X:only-of-type (唯一子元素类型选择器)&quot;">​</a></h3><ul><li>only-of-type会匹配母元素里没有邻近兄弟元素的子元素</li></ul><h3 id="x-first-of-type-第一个元素类型选择器" tabindex="-1">X:first-of-type (第一个元素类型选择器) <a class="header-anchor" href="#x-first-of-type-第一个元素类型选择器" aria-label="Permalink to &quot;X:first-of-type (第一个元素类型选择器)&quot;">​</a></h3><ul><li>选择该类型的第一个元素</li></ul><h2 id="css和js两种方式实现div右移1000px动画" tabindex="-1">css和js两种方式实现div右移1000px动画 <a class="header-anchor" href="#css和js两种方式实现div右移1000px动画" aria-label="Permalink to &quot;css和js两种方式实现div右移1000px动画&quot;">​</a></h2><p><strong>css：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">#test{</span></span>
<span class="line"><span style="color:#A6ACCD;">	width:50px;</span></span>
<span class="line"><span style="color:#A6ACCD;">	height:50px;</span></span>
<span class="line"><span style="color:#A6ACCD;">	box-shadow:0 0 5px rgba(0,0,0,0.6);</span></span>
<span class="line"><span style="color:#A6ACCD;">	animation:1s move forwards;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">@keyframes move{</span></span>
<span class="line"><span style="color:#A6ACCD;">	0%{margin-left:0}</span></span>
<span class="line"><span style="color:#A6ACCD;">	100%{margin-left:1000px}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p><strong>js：</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> time</span></span>
<span class="line"><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onload</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">time</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">setInterval</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">box</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">marginLeft</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">marginLeft</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">200px</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clearInterval</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">time</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">       </span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">marginLeft</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">marginLeft</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0px</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">marginLeft</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`\${</span><span style="color:#82AAFF;">parseFloat</span><span style="color:#A6ACCD;">(box</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">marginLeft) </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">px</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> element </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> start</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">step</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">timestamp</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">start</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#F07178;">) </span><span style="color:#A6ACCD;">start</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">timestamp</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">elapsed</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">timestamp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">start</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">element</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">transform</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">translateX(</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">min</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> elapsed</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">px)</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">min</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">elapsed</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">200</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">elapsed</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2000</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">requestAnimationFrame</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">step</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">requestAnimationFrame</span><span style="color:#A6ACCD;">(step)</span></span></code></pre></div><h2 id="visibility、display、opacity的区别" tabindex="-1">visibility、display、opacity的区别 <a class="header-anchor" href="#visibility、display、opacity的区别" aria-label="Permalink to &quot;visibility、display、opacity的区别&quot;">​</a></h2><table><thead><tr><th>项目</th><th>display:none</th><th>opacity:0</th><th>visibility:hidden</th></tr></thead><tbody><tr><td>占位</td><td>否</td><td>是</td><td>是</td></tr><tr><td>回流与渲染</td><td>是</td><td>否</td><td>否</td></tr><tr><td>子代继承</td><td>不继承</td><td>继承</td><td>继承</td></tr><tr><td>子代反继承</td><td>否</td><td>否</td><td>能</td></tr><tr><td>transition</td><td>无效</td><td>有效</td><td>有效</td></tr><tr><td>绑定的事件</td><td>不响应</td><td>响应</td><td>不响应</td></tr></tbody></table><h2 id="回流和重绘-回流一定会触发重绘-而重绘不一定会回流" tabindex="-1">回流和重绘（回流一定会触发重绘，而重绘不一定会回流） <a class="header-anchor" href="#回流和重绘-回流一定会触发重绘-而重绘不一定会回流" aria-label="Permalink to &quot;回流和重绘（回流一定会触发重绘，而重绘不一定会回流）&quot;">​</a></h2><table><thead><tr><th>项目</th><th>回流</th><th>重绘</th></tr></thead><tbody><tr><td>添加、删除元素</td><td>是</td><td>是</td></tr><tr><td>display:none</td><td>是</td><td>是</td></tr><tr><td>visibility</td><td>否</td><td>是</td></tr><tr><td>移动元素</td><td>是</td><td>是</td></tr><tr><td>style</td><td>看情况</td><td>看情况</td></tr><tr><td>改变浏览器大小、浏览器字体大小</td><td>是</td><td>是</td></tr></tbody></table><h2 id="单行截断和多行截断" tabindex="-1">单行截断和多行截断 <a class="header-anchor" href="#单行截断和多行截断" aria-label="Permalink to &quot;单行截断和多行截断&quot;">​</a></h2><p><strong>单行：</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">span{</span></span>
<span class="line"><span style="color:#A6ACCD;">	display:line-block;</span></span>
<span class="line"><span style="color:#A6ACCD;">	width:150px;</span></span>
<span class="line"><span style="color:#A6ACCD;">	overflow:hidden;</span></span>
<span class="line"><span style="color:#A6ACCD;">	text-overflow:ellipsis;</span></span>
<span class="line"><span style="color:#A6ACCD;">	white-space:nowrap;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p><strong>多行：</strong></p><p>1：(必须在webkit内核浏览器使用，而且不支持自定义点击展开的样式)</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">400px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">text-overflow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> ellipsis</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> -webkit-box</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">overflow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> hidden</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">-webkit-line-clamp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">-webkit-box-orient</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> vertical</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">text-align</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> justify</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>2：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试测试</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">standard</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">more</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...更多</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">max-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">54px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> // 最大高度</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">overflow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> hidden</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> // 超出隐藏</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">line-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> // 方便计算几行。。</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">12px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">div</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> // 三个元素都设置float</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">float</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> right</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">content</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">margin-left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-50px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> // 这是第一个元素，由于他宽度是100%，所以需要给standard位置。</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hsla</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">229</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">75%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.5</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">standard</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> //宽度随意， 需要与上面margin-left一样</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">54px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> // 超出这个高度会出现more元素</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">transparent</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hsla</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">334</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">75%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.5</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">more</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">50px</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> // 这个元素可自定义，宽度</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">18px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> // 确定位置,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translate</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">-100%</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">-100%</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;">// 确定位置</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">linear-gradient</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">90deg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">rgba</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">fff </span><span style="color:#F78C6C;">20%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">fff</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> // 这是使用渐变，因为more元素会覆盖住content元素。</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="flex布局" tabindex="-1">flex布局 <a class="header-anchor" href="#flex布局" aria-label="Permalink to &quot;flex布局&quot;">​</a></h2><p><strong>flexible box，弹性布局</strong>（webkit内核的浏览器需要加-webkit）</p><ul><li>设置属性后，<code>float</code>、<code>clear</code>、<code>vertival-align</code>均失效</li><li>有两个主轴：<code>main axis</code>、<code>cross axis</code></li><li>两个主轴空间：<code>main size</code>、<code>cross size</code></li><li>两个开始位置：<code>main start</code>、<code>cross start</code></li><li>两个结束位置：<code>main end</code>、<code>cross end</code></li></ul><p><strong>父容器：</strong></p><ul><li><code>flex-direction</code> 决定主轴方向：row、row-reverse、column、column-reverse</li><li><code>flex-wrap</code> 换行：nowrap、wrap、warp-reverse</li><li><code>flex-flow</code>是<code>flex-direction</code>和<code>flex-wrap</code>的简写形式，默认值为row nowrap</li><li><code>justify-content</code> 定义子项在主轴方向上的对齐方式：flex-start、flex-end、center、space-between、space-around</li><li><code>align-items</code> 定义子项在交叉轴上如何对齐：flex-start、flex-end、center、baseline、stretch(默认值)</li><li><code>align-content</code> 定义了多根轴线的对齐方式。如果只有一根轴线，该属性不起作用：flex-start、flex-end、center、space-between、space-around、stretch</li></ul><p><strong>子项：</strong></p><ul><li><code>order</code>：排序，数值越小，排名越前，默认值0</li><li><code>flex-grow</code>：放大比例，默认值0</li><li><code>flex-shrink</code>：缩小比例，默认值1，负值无效</li><li><code>flex-basis</code>：属性定义了在分配多余空间之前，项目占据的主轴空间（main size）；浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</li><li><code>flex</code>是<code>flex-grow</code>、<code>flex-shrink</code>、<code>flex-basis</code>的缩写，默认值0 1 auto，后两个属性可选，快捷值auto 、（1 1 auto）、none（0 0 auto）</li><li><code>align-self</code>：允许与其他子项不一样的对齐方式，可股改align-items属性，默认值为auto</li><li></li></ul><h2 id="transition、transform、translate的区别" tabindex="-1">transition、transform、translate的区别 <a class="header-anchor" href="#transition、transform、translate的区别" aria-label="Permalink to &quot;transition、transform、translate的区别&quot;">​</a></h2><p><code>transition</code>：过渡，transition-property、transition-duration、transition-timing-function、transition-delay</p><p><code>transform</code>：旋转、缩放、移动等动画</p><p><code>translate</code>：定义2D转换</p><h2 id="如何画一条-0-5px-的边框" tabindex="-1">如何画一条 0.5px 的边框 <a class="header-anchor" href="#如何画一条-0-5px-的边框" aria-label="Permalink to &quot;如何画一条 0.5px 的边框&quot;">​</a></h2><ol><li>直接定义0.5px</li><li>缩放 scaleY(0.5)，虚化问题可加 transform-origin: 50% 100% 解决</li><li>渐变 linear-gradient(0deg,#fff,#000),有虚化</li><li>box-shadow</li><li>svg</li></ol><table><thead><tr><th>UA\\方法</th><th>设置0.5px</th><th>transfrom</th><th>box-shadow</th><th>svg(base64)</th></tr></thead><tbody><tr><td>ios浏览器</td><td>√</td><td>√</td><td></td><td>√</td></tr><tr><td>安卓浏览器</td><td></td><td>√</td><td>√</td><td>√</td></tr><tr><td>chrome</td><td></td><td>√</td><td>√</td><td>√</td></tr><tr><td>firefox</td><td>√</td><td>√</td><td></td><td>√</td></tr><tr><td>safari</td><td>√</td><td>√</td><td></td><td>√</td></tr></tbody></table><h2 id="说一下bfc" tabindex="-1">说一下BFC <a class="header-anchor" href="#说一下bfc" aria-label="Permalink to &quot;说一下BFC&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">block formatting contexts(块级格式化上下文)</p><p>容器内的元素不会影响容器外的元素</p></div><p><strong>形成条件：</strong></p><ul><li>body根元素</li><li>浮动元素</li><li>绝对定位元素</li><li>display:inline-block、table-cells、flex</li><li>overflow：除了visible外的值</li></ul><p><strong>bfc常用作用：</strong></p><ul><li>阻止外边距折叠（解决方法：将元素放在不同的bfc容器）</li><li>清除浮动</li><li>阻止元素被浮动元素覆盖</li></ul><h2 id="css垂直居中的方案" tabindex="-1">CSS垂直居中的方案 <a class="header-anchor" href="#css垂直居中的方案" aria-label="Permalink to &quot;CSS垂直居中的方案&quot;">​</a></h2><ol><li>绝对定位+margin负值</li><li>绝对定位+translate位移</li><li>绝对定位+margin：auto</li><li>flex布局</li><li>Grid布局</li></ol><h2 id="伪元素和伪类的区别" tabindex="-1">伪元素和伪类的区别 <a class="header-anchor" href="#伪元素和伪类的区别" aria-label="Permalink to &quot;伪元素和伪类的区别&quot;">​</a></h2><table><thead><tr><th>项</th><th>伪元素</th><th>伪类</th></tr></thead><tbody><tr><td>区别</td><td>创建元素</td><td>操作已有元素</td></tr><tr><td>如何使用</td><td>单冒号</td><td>双冒号</td></tr></tbody></table><h2 id="position的几个属性和含义" tabindex="-1">position的几个属性和含义 <a class="header-anchor" href="#position的几个属性和含义" aria-label="Permalink to &quot;position的几个属性和含义&quot;">​</a></h2><table><thead><tr><th>项</th><th>static</th><th>absolute</th><th>relative</th><th>fixed</th><th>inherit</th></tr></thead><tbody><tr><td>含义</td><td>默认文档流</td><td>绝对定位</td><td>相对定位</td><td>绝对定位</td><td>继承父元素定位</td></tr><tr><td>文档流</td><td>正常文档流</td><td>脱离文档流</td><td>脱离文档流</td><td>脱离文档流</td><td>根据父元素而定</td></tr><tr><td>定位</td><td>无</td><td>相对static定位以外的第一个父元素定位</td><td>相对其正常位置定位</td><td>根据浏览器窗口位置定位</td><td>根据父元素而定</td></tr></tbody></table><h2 id="说一下盒模型" tabindex="-1">说一下盒模型 <a class="header-anchor" href="#说一下盒模型" aria-label="Permalink to &quot;说一下盒模型&quot;">​</a></h2><table><thead><tr><th>盒模型</th><th>border-box</th><th>content-box</th></tr></thead><tbody><tr><td>区域</td><td>除了margin，都计算在宽高</td><td>宽高只包含content</td></tr></tbody></table><h2 id="响应式布局方案" tabindex="-1">响应式布局方案 <a class="header-anchor" href="#响应式布局方案" aria-label="Permalink to &quot;响应式布局方案&quot;">​</a></h2><ol><li>媒体查询</li><li>百分比布局</li><li>rem</li><li>vw\\vh</li><li>flex</li><li>grid</li></ol><h2 id="三栏式布局方案" tabindex="-1">三栏式布局方案 <a class="header-anchor" href="#三栏式布局方案" aria-label="Permalink to &quot;三栏式布局方案&quot;">​</a></h2><ol><li>纯浮动</li><li>浮动+bfc</li><li>flex</li><li>定位</li></ol><h2 id="关于低版本的安卓系统下浏览器的异常表现" tabindex="-1">关于低版本的安卓系统下浏览器的异常表现 <a class="header-anchor" href="#关于低版本的安卓系统下浏览器的异常表现" aria-label="Permalink to &quot;关于低版本的安卓系统下浏览器的异常表现&quot;">​</a></h2><ol><li>css3动画会引起页面的canvas闪屏，可以考虑切换svg以获得更优的性能</li><li>css3动画掉帧的问题，尽量使用transform来做动画，不要使用height、width、margin、padding等，原因阅读下方连接</li><li>通过打包一个空的安卓应用访问项目地址的方式可以闪屏问题</li><li>border-radius不支持的问题，可以考虑用图层遮盖的方式遮盖以达到圆的目的</li></ol>`,104),D=JSON.parse('{"title":"css","description":"","frontmatter":{},"headers":[],"relativePath":"content/css.md"}'),t={name:"content/css.md"},F=Object.assign(t,{setup(e){return(c,r)=>(a(),l("div",null,[p,n(s,{target:{name:"浏览器线程",url:"/content/浏览器相关.html#浏览器线程"}},null,8,["target"])]))}});export{D as __pageData,F as default};
