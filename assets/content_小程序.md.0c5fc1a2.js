import{_ as t,o as d,c as a,X as r}from"./chunks/framework.79f01d3e.js";const m=JSON.parse('{"title":"小程序","description":"","frontmatter":{},"headers":[],"relativePath":"content/小程序.md"}'),e={name:"content/小程序.md"},o=r('<h1 id="小程序" tabindex="-1">小程序 <a class="header-anchor" href="#小程序" aria-label="Permalink to &quot;小程序&quot;">​</a></h1><h2 id="小程序架构" tabindex="-1">小程序架构 <a class="header-anchor" href="#小程序架构" aria-label="Permalink to &quot;小程序架构&quot;">​</a></h2><p><strong>双线程模型：</strong></p><ul><li>渲染层：webview(多线程)</li><li>逻辑层：jscore</li></ul><p>视图层和逻辑层通过系统层的<code>weixinjsbridge</code>通信</p><h2 id="小程序和h5的区别" tabindex="-1">小程序和H5的区别 <a class="header-anchor" href="#小程序和h5的区别" aria-label="Permalink to &quot;小程序和H5的区别&quot;">​</a></h2><table><thead><tr><th>项</th><th>H5</th><th>小程序</th></tr></thead><tbody><tr><td>运行环境</td><td>浏览器</td><td>特定的移动软件平台</td></tr><tr><td>运行机制</td><td>网页</td><td>可以热启动</td></tr><tr><td>系统权限</td><td>×</td><td>√</td></tr><tr><td>开发语言</td><td>html、css、js</td><td>wxml、wxss、js</td></tr><tr><td>开发成本</td><td>兼容性<br>开发工具<br>框架UI等</td><td>无</td></tr><tr><td>更新机制</td><td>发布即更新</td><td>审核后小程序需要更新</td></tr><tr><td>渲染机制</td><td>浏览器渲染</td><td>双线程</td></tr></tbody></table><h2 id="小程序在安卓和ios区别" tabindex="-1">小程序在安卓和ios区别 <a class="header-anchor" href="#小程序在安卓和ios区别" aria-label="Permalink to &quot;小程序在安卓和ios区别&quot;">​</a></h2><table><thead><tr><th>项</th><th>安卓</th><th>ios</th></tr></thead><tbody><tr><td>js运行环境</td><td>v8</td><td>jscore</td></tr><tr><td>视图层渲染</td><td>基于mobile chromium的xweb</td><td>wkwebview</td></tr><tr><td>样式</td><td></td><td></td></tr><tr><td>语法区别</td><td></td><td></td></tr></tbody></table><h2 id="为什么要用taro-taro是如何实现跨端的" tabindex="-1">为什么要用Taro？Taro是如何实现跨端的？ <a class="header-anchor" href="#为什么要用taro-taro是如何实现跨端的" aria-label="Permalink to &quot;为什么要用Taro？Taro是如何实现跨端的？&quot;">​</a></h2><p>现如今市面上端的形态多种多样，当业务要求各终端都要实现，开发成本就很高，这时候只需要编写一套代码就能够适配多端的能力就显得极为需要</p><p>编译实现跨端</p>',12),h=[o];function i(s,l,n,c,_,b){return d(),a("div",null,h)}const u=t(e,[["render",i]]);export{m as __pageData,u as default};
