import{_ as A,h as t,o as c,c as D,z as n,t as e,b as r,F as d,E as h,X as y}from"./chunks/framework.79f01d3e.js";const u={__name:"mousemove",setup(F){let l=t(""),o=t("");const i=s=>{s.clientX%100===0&&(l.value=s.clientX)},C=s=>{o.value=s.clientX};return(s,a)=>(c(),D(d,null,[n("div",{onMousemove:a[0]||(a[0]=p=>i(p))},[n("p",null,e(r(l)),1)],32),n("div",{onMousemove:a[1]||(a[1]=p=>C(p))},[n("p",null,e(r(o)),1)],32)],64))}},m=A(u,[["__scopeId","data-v-3933904e"]]),g=y(`<h1 id="浏览器-网络" tabindex="-1">浏览器&amp;网络 <a class="header-anchor" href="#浏览器-网络" aria-label="Permalink to &quot;浏览器&amp;网络&quot;">​</a></h1><h2 id="介绍一下eventloop" tabindex="-1">介绍一下EventLoop <a class="header-anchor" href="#介绍一下eventloop" aria-label="Permalink to &quot;介绍一下EventLoop&quot;">​</a></h2><ol><li>所有同步任务在主线程执行，形成一个执行栈</li><li>主线程外存在一个任务队列，异步任务有了结果，就在任务队列中放置一个事件</li><li>执行栈中的任务执行完成后，系统会读取任务队列中的事件，根据事件读取对应的异步任务，将对应的异步任务结束等待状态，进入执行栈，执行任务。</li><li>主线程不断执行第三步</li></ol><h2 id="eventloop中为什么要同时存在宏任务和微任务两个队列-设计一个行不行-一段代码在执行时-程序是如何去区分宏任务和微任务的" tabindex="-1">EventLoop中为什么要同时存在宏任务和微任务两个队列？设计一个行不行？一段代码在执行时，程序是如何去区分宏任务和微任务的？ <a class="header-anchor" href="#eventloop中为什么要同时存在宏任务和微任务两个队列-设计一个行不行-一段代码在执行时-程序是如何去区分宏任务和微任务的" aria-label="Permalink to &quot;EventLoop中为什么要同时存在宏任务和微任务两个队列？设计一个行不行？一段代码在执行时，程序是如何去区分宏任务和微任务的？&quot;">​</a></h2><ol><li>为了保证任务有优先级</li><li>确保非阻塞</li></ol><h2 id="script标签为什么要放在底部" tabindex="-1">script标签为什么要放在底部 <a class="header-anchor" href="#script标签为什么要放在底部" aria-label="Permalink to &quot;script标签为什么要放在底部&quot;">​</a></h2><p>避免脚本阻塞</p><h2 id="defer和async的区别-以及它们的加载和执行时机" tabindex="-1">defer和async的区别，以及它们的加载和执行时机 <a class="header-anchor" href="#defer和async的区别-以及它们的加载和执行时机" aria-label="Permalink to &quot;defer和async的区别，以及它们的加载和执行时机&quot;">​</a></h2><table><thead><tr><th>项</th><th>共同点</th><th>不同</th></tr></thead><tbody><tr><td>defer</td><td>并行下载js、异步</td><td>下载完毕后立即执行，不会按照页面上的script顺序执行</td></tr><tr><td>async</td><td>并行下载js、异步</td><td>页面解析完毕后会按照script标签的顺序执行<br>同时会在document的DOMContentLoaded之前执行</td></tr></tbody></table><h2 id="如何设计css、js等文件的缓存" tabindex="-1">如何设计css、js等文件的缓存 <a class="header-anchor" href="#如何设计css、js等文件的缓存" aria-label="Permalink to &quot;如何设计css、js等文件的缓存&quot;">​</a></h2><ul><li>增加版本号</li><li>增加修改时间戳</li></ul><h2 id="内存泄漏" tabindex="-1">内存泄漏 <a class="header-anchor" href="#内存泄漏" aria-label="Permalink to &quot;内存泄漏&quot;">​</a></h2><p><strong>定义：由于疏忽或程序错误造成的未能释放已经不再使用的内存</strong></p><p><strong>引起内存泄漏的场景：</strong></p><ul><li>闭包使用不当引起内存泄漏</li><li>全局变量</li><li>分离的DOM节点</li><li>控制台的打印</li><li>遗忘的定时器</li></ul><h2 id="settimeout为什么会造成内存泄露-如何防止settimeout内存泄露-清除定时器为什么就不会有内存泄露" tabindex="-1">setTimeout为什么会造成内存泄露？如何防止setTimeout内存泄露？清除定时器为什么就不会有内存泄露？ <a class="header-anchor" href="#settimeout为什么会造成内存泄露-如何防止settimeout内存泄露-清除定时器为什么就不会有内存泄露" aria-label="Permalink to &quot;setTimeout为什么会造成内存泄露？如何防止setTimeout内存泄露？清除定时器为什么就不会有内存泄露？&quot;">​</a></h2><ul><li><p>第一个参数为字符串</p></li><li><p>递归</p></li></ul><p>递归清除定时器</p><h2 id="介绍一下http缓存" tabindex="-1">介绍一下http缓存 <a class="header-anchor" href="#介绍一下http缓存" aria-label="Permalink to &quot;介绍一下http缓存&quot;">​</a></h2><p>为了提升页面的访问速度，把能缓存的页面或数据缓存到能够更快取到的地方</p><h2 id="哪些字段用做强缓存-哪些字段用做协商缓存" tabindex="-1">哪些字段用做强缓存?哪些字段用做协商缓存? <a class="header-anchor" href="#哪些字段用做强缓存-哪些字段用做协商缓存" aria-label="Permalink to &quot;哪些字段用做强缓存?哪些字段用做协商缓存?&quot;">​</a></h2><table><thead><tr><th>项</th><th>强缓存</th><th>协商缓存</th></tr></thead><tbody><tr><td>定义</td><td>本地缓存，只浏览器不发出请求，直接从缓存中获取</td><td>当校验发现不能使用强缓存</td></tr><tr><td>expires(http1.0，值为一个绝对时间的标准GMT格式的时间字符串)</td><td>√</td><td></td></tr><tr><td>Cache-Control:max-age= number(http:1.1，最新一次请求事件小于资源第一次请求的事件加上number)<br>no-cache：响应数据不能被任何接受响应的客户端所缓存，强制从服务器进行拉取。可用在请求头和响应头中<br>no-store：所传送的响应数据除了不能被缓存，也不能存入磁盘<br>public：允许所有终端缓存数据<br>private：只允许客户端缓存<br>优先级高于Expires</td><td>√</td><td></td></tr><tr><td>Last-Modify/if-Modify-Since：(都是用的GMT时间格式)<br>流程：<br>第一次请求时，在response header中返回Last-Modify，表示最有一次修改时间<br>下次请求是request header中包含if-Modify-Since，去询问服务器是不是还是上次那个最后修改时间<br>如果还是上次一样的事件，说明数据没有更新，返回304，浏览器直接取缓存<br>如果不是那么就返回数据，同时返回Last-Modify</td><td></td><td>√</td></tr><tr><td>ETag/if-None-Match：这两个值是由服务器生成的资源唯一的表示字符串，只要资源有变化这个值就会变化。<br>判断过程同上，不同的是当服务器返回304，由于ETag重新生成过，response header中还是会将ETag返回，即使和原来的一样<br>使用场景：<br>1、当资源定时更新，但是资源内容没有变化时<br>2、资源每秒更新多次时，由于Last-Modify的时间只精确到秒<br>3、某些服务器不能精确的得到文件的最后更改时间<br>4、可和Last-Modify一起用，ETag优先</td><td></td><td>√</td></tr></tbody></table><h2 id="用户行为对缓存的影响" tabindex="-1">用户行为对缓存的影响 <a class="header-anchor" href="#用户行为对缓存的影响" aria-label="Permalink to &quot;用户行为对缓存的影响&quot;">​</a></h2><table><thead><tr><th>用户操作</th><th>Expires/Cache-Control</th><th>Last-Modify/ETag</th></tr></thead><tbody><tr><td>地址栏回车</td><td>√</td><td>√</td></tr><tr><td>页面链接跳转</td><td>√</td><td>√</td></tr><tr><td>新开窗口</td><td>√</td><td>√</td></tr><tr><td>前进后退</td><td>√</td><td>√</td></tr><tr><td>F5刷新</td><td>×</td><td>√</td></tr><tr><td>Ctrl+F5强制刷新</td><td>×</td><td>×</td></tr></tbody></table><h2 id="宏任务和微任务的区别" tabindex="-1">宏任务和微任务的区别 <a class="header-anchor" href="#宏任务和微任务的区别" aria-label="Permalink to &quot;宏任务和微任务的区别&quot;">​</a></h2><ul><li>进程的切换肯定是宏任务</li><li>线程的切换是微任务</li></ul><h2 id="为什么和定时器有关的任务是宏任务" tabindex="-1">为什么和定时器有关的任务是宏任务 <a class="header-anchor" href="#为什么和定时器有关的任务是宏任务" aria-label="Permalink to &quot;为什么和定时器有关的任务是宏任务&quot;">​</a></h2><p>因为<strong>计时是实时的</strong>，它一定不能<strong>被阻塞</strong>，所以定时器被设计在另一个进程中被管理，所以，定时器任务会有进程的切换，所以只能是宏任务</p><h2 id="事件为什么是宏任务呢" tabindex="-1">事件为什么是宏任务呢 <a class="header-anchor" href="#事件为什么是宏任务呢" aria-label="Permalink to &quot;事件为什么是宏任务呢&quot;">​</a></h2><p>事件的触发是依赖于<strong>浏览器</strong>的实现，平台有它自己的事件注册和派发机制，比如nodeJS用的内核libuv，所以不管怎样，事件的独立注册表和派发机制导致，他也不会和JS存在一个进程中，事件的管理中心一定是在另外一个进程中实现的，那么去派发事件，也就是宏任务</p><h2 id="js本身语法内的" tabindex="-1">JS本身语法内的 <a class="header-anchor" href="#js本身语法内的" aria-label="Permalink to &quot;JS本身语法内的&quot;">​</a></h2><ol><li>比如async/await,它本身是一个迭代器，迭代器利用了纤程，在不同的纤程之间切换，所以是微任务</li><li>进程和纤（线）程最大的区别是：进程占用单独的资源，即不会共享CPU和内存，而线程往下，都是共享CPU和内存的，只是在一个空间中在进行拆分，做切换</li><li>如果是JS本身的命令是进程的话，就没有办法拿到外面上下文的数据了，因为不共享内存</li><li>JS本身的部分一定是比线程小的</li></ol><h2 id="非js本身的" tabindex="-1">非JS本身的 <a class="header-anchor" href="#非js本身的" aria-label="Permalink to &quot;非JS本身的&quot;">​</a></h2><p>非JS本身的，因为往往被设计成不被JS阻塞的，所以会单独开启一个进程作管理，这样出来的都是宏任务</p><h2 id="那么像observer-如mutationobserver等-和一些渲染为什么都是微任务呢" tabindex="-1">那么像Observer(如MutationObserver等)，和一些渲染为什么都是微任务呢？ <a class="header-anchor" href="#那么像observer-如mutationobserver等-和一些渲染为什么都是微任务呢" aria-label="Permalink to &quot;那么像Observer(如MutationObserver等)，和一些渲染为什么都是微任务呢？&quot;">​</a></h2><ol><li>虽然它们和JS的本身无关，但是它们的执行时机和它们所在的进程是有关的</li><li>比如MutationObserver，观察的是DOM,它的作用即是对DOM的变化做出响应，所以，他会在管理DOM的进程中</li><li>渲染也是一样的，是在整个渲染流程中的某一步作的回调，并没有切换出它的本身所在的空间</li></ol><h2 id="浏览器页面加载过程" tabindex="-1">浏览器页面加载过程 <a class="header-anchor" href="#浏览器页面加载过程" aria-label="Permalink to &quot;浏览器页面加载过程&quot;">​</a></h2><table><thead><tr><th>浏览器进程进程</th><th>作用</th></tr></thead><tbody><tr><td>浏览器进程</td><td>管理标签页的创建销毁以及页面的显示、资源下载</td></tr><tr><td>第三方插件进程</td><td>管理第三方插件</td></tr><tr><td>GPU进程</td><td>3D绘制与硬件加速(最多一个)</td></tr><tr><td>渲染进程</td><td>页面文档解析，执行与渲染</td></tr></tbody></table><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">浏览器地址栏输入URL</span></span>
<span class="line"><span style="color:#A6ACCD;">DNS服务器解析域名</span></span>
<span class="line"><span style="color:#A6ACCD;">    ————————————————</span></span>
<span class="line"><span style="color:#A6ACCD;">    解析过程：</span></span>
<span class="line"><span style="color:#A6ACCD;">    1、查看浏览器DNS缓存</span></span>
<span class="line"><span style="color:#A6ACCD;">    2、1不存在则查询本地计算机本地DNS缓存</span></span>
<span class="line"><span style="color:#A6ACCD;">    3、2不存在则询问递归式DNS服务器</span></span>
<span class="line"><span style="color:#A6ACCD;">    4、3不存在则访问根域名服务器和TLD域名服务器，再到对应的权威DNS服务</span></span>
<span class="line"><span style="color:#A6ACCD;">   	   器找，并缓存啊到递归式服务器，再将记录返回本地</span></span>
<span class="line"><span style="color:#A6ACCD;">    5、DNS解析非常耗时，如果页面中需要解析的域名过多，非常影响页面性能，</span></span>
<span class="line"><span style="color:#A6ACCD;">       考虑使用DNS预加载或减少DNS解析</span></span>
<span class="line"><span style="color:#A6ACCD;">    ————————————————</span></span>
<span class="line"><span style="color:#A6ACCD;">取得IP地址后，发起请求，建立TCP连接</span></span>
<span class="line"><span style="color:#A6ACCD;">	————————————————</span></span>
<span class="line"><span style="color:#A6ACCD;">	网络协议：</span></span>
<span class="line"><span style="color:#A6ACCD;">	1、应用层(DNS、HTTP)：DNS解析IP并发送HTTP请求</span></span>
<span class="line"><span style="color:#A6ACCD;">	2、传输层(TCP、UDP)：建立TCP连接</span></span>
<span class="line"><span style="color:#A6ACCD;">	3、网络层(IP、ARP)：IP寻址</span></span>
<span class="line"><span style="color:#A6ACCD;">	4、数据链路层(PPP)：封装成帧</span></span>
<span class="line"><span style="color:#A6ACCD;">	[</span></span>
<span class="line"><span style="color:#A6ACCD;">	OSI：</span></span>
<span class="line"><span style="color:#A6ACCD;">	4.1、会话层</span></span>
<span class="line"><span style="color:#A6ACCD;">	4.2、表示层</span></span>
<span class="line"><span style="color:#A6ACCD;">	]</span></span>
<span class="line"><span style="color:#A6ACCD;">	5、物理层(利用物理介质传输比特流)：物理传输</span></span>
<span class="line"><span style="color:#A6ACCD;">	————————————————</span></span>
<span class="line"><span style="color:#A6ACCD;">服务器接收请求做出响应，若Connection:Keep-Alive，TCP会持久连接</span></span>
<span class="line"><span style="color:#A6ACCD;">浏览器收到响应开始下载资源</span></span>
<span class="line"><span style="color:#A6ACCD;">浏览器解析HTML、css、js渲染</span></span></code></pre></div><h2 id="sessionsorage、localstorage、cookie的区别-同一个系统开两个网页-两个网页的sessionstorage共享吗" tabindex="-1">sessionSorage、localstorage、cookie的区别？同一个系统开两个网页，两个网页的sessionStorage共享吗？ <a class="header-anchor" href="#sessionsorage、localstorage、cookie的区别-同一个系统开两个网页-两个网页的sessionstorage共享吗" aria-label="Permalink to &quot;sessionSorage、localstorage、cookie的区别？同一个系统开两个网页，两个网页的sessionStorage共享吗？&quot;">​</a></h2><table><thead><tr><th>项</th><th>cookie</th><th>localStorage</th><th>sessionStorage</th></tr></thead><tbody><tr><td>大小</td><td>4K</td><td>5M</td><td>5M</td></tr><tr><td>生命周期</td><td>不设置有效期则会存放在内存中，会话结束自动删除<br>设置了有效期则会存放在硬盘中，有效期到了自动删除</td><td>永久有效，需要手动删除</td><td>会话结束自动清除</td></tr><tr><td>生成方式</td><td>服务器生成</td><td>前端生成</td><td>前端生成</td></tr><tr><td>与服务器同信</td><td>携带在http头</td><td>存放数据用</td><td>存放数据用</td></tr><tr><td>数据共享</td><td>同源页面共享</td><td>同源页面共享</td><td>同源页面共享</td></tr><tr><td>易用性</td><td>差</td><td>好</td><td>好</td></tr></tbody></table><h2 id="浏览器线程" tabindex="-1">浏览器线程 <a class="header-anchor" href="#浏览器线程" aria-label="Permalink to &quot;浏览器线程&quot;">​</a></h2><p><strong>浏览器的2个重要的执行线程，这 2 个线程协同工作来渲染一个网页：主线程和合成线程</strong></p><div class="tip custom-block"><p class="custom-block-title">主线程</p><ul><li>运行 JavaScript</li><li>计算 HTML 元素的 CSS 样式</li><li>页面的布局</li><li>将元素绘制到一个或多个位图中</li><li>将这些位图交给合成线程</li></ul></div><p><strong>主线程渲染流程：</strong></p><ul><li>使用 HTML 创建文档对象模型（DOM）</li><li>使用 CSS 创建 CSS 对象模型（CSSOM）</li><li>基于 DOM 和 CSSOM 执行脚本（Scripts）</li><li>合并 DOM 和 CSSOM 形成渲染树（Render Tree）</li><li>使用渲染树布局（Layout）所有元素</li><li>渲染（Paint）所有元素</li></ul><div class="tip custom-block"><p class="custom-block-title">合成线程</p><ul><li>通过 GPU 将位图绘制到屏幕上</li><li>通知主线程更新页面中可见或即将变成可见的部分的位图</li><li>计算出页面中哪部分是可见的</li><li>计算出当你在滚动页面时哪部分是即将变成可见的</li><li>当你滚动页面时将相应位置的元素移动到可视区域</li></ul></div><p><strong>合成线程优点：</strong></p><ul><li>其工作无关主线程，合成器线程不需要等待样式计算或者 JS 执行，这就是为什么合成器相关的动画最流畅</li><li>如果某个动画涉及到布局或者绘制的调整（触发回流的操作），就会涉及到主线程的重新计算，自然会慢很多</li></ul><p><strong>那么回到原来的问题，为什么动画会卡顿，那就是主线程和合成线程的调度不合理</strong></p><p>举个例子：</p><p>使用<strong>height，width，margin，padding</strong>作为transition的值时，会造成浏览器主线程的工作量较重。</p><p>例如从margin-left:-20px渲染到margin-left:0，主线程需要计算样式margin-left:-19px，margin-left:-18px...一直到margin-left:0，而且每一次主线程计算样式后，合成进程都需要绘制到GPU然后再渲染到屏幕上，前后总共进行20次主线程渲染，20次合成线程渲染，20+20次，总计40次计算。</p><p>如果使用transform的话，例如tranform:translate(-20px,0)到transform:translate(0,0)，主线程只需要进行一次tranform:translate(-20px,0)到transform:translate(0,0)，然后合成线程去一次将-20px转换到0px，这样的话，总计1+20计算。</p><p><strong>所以在使用css3 transtion做动画效果时，优先选择transform，尽量不要使用height，width，margin和padding。</strong></p><p><strong>为什么transform更加平滑？</strong></p><ul><li>在使用transform做动画效果时，transform实现的动画是与合成器线程相关的，不需要等待主线程样式计算或者 JS 执行，计算速度是很快的</li><li>而使用height，width，margin和padding时，导致布局和绘制的调整（触发回流），主线程需要重新计算样式并且执行JS，计算速度自然就慢了</li></ul><h2 id="关于渲染时部分样式丢失的问题" tabindex="-1">关于渲染时部分样式丢失的问题 <a class="header-anchor" href="#关于渲染时部分样式丢失的问题" aria-label="Permalink to &quot;关于渲染时部分样式丢失的问题&quot;">​</a></h2><p>可用定时器让任务重复排进队列</p><h2 id="关于一个mousemove加条件判断的怪异卡顿问题" tabindex="-1">关于一个mousemove加条件判断的怪异卡顿问题 <a class="header-anchor" href="#关于一个mousemove加条件判断的怪异卡顿问题" aria-label="Permalink to &quot;关于一个mousemove加条件判断的怪异卡顿问题&quot;">​</a></h2>`,60),b=y(`<ul><li>鼠标在上方移动时，第一个区域会存在卡顿的问题，但如果打开开发者控制台，则卡顿问题会消失</li><li>目前不知道如何解释这种情况，个人理解是否是因为第一个的if条件相当于个防抖？</li></ul><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">// html例子</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#F07178;">DOCTYPE</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">en</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">charset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">UTF-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">http-equiv</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">X-UA-Compatible</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">IE=edge</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width, initial-scale=1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Document</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test_p</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">123</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test2_p</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">234</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">600px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">300px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">margin-top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> white</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> test </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> test2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> test_p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test_p</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> test2_p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test2_p</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    test</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mousemove</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientX</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">test_p</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerText</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientX</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    test2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mousemove</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">test2_p</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerText</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientX</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">// vue例子</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ref</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> text </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> text2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> mousemoveEvent </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientX</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">text</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientX</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> mousemoveEvent2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">text2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientX</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@mousemove</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(e) =&gt; mousemoveEvent(e)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{ text }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@mousemove</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(e) =&gt; mousemoveEvent2(e)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{ text2 }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">300px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> white</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,3),E=JSON.parse('{"title":"浏览器&网络","description":"","frontmatter":{},"headers":[],"relativePath":"content/浏览器相关.md"}'),v={name:"content/浏览器相关.md"},q=Object.assign(v,{setup(F){return(l,o)=>(c(),D("div",null,[g,h(m),b]))}});export{E as __pageData,q as default};
