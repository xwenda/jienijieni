import{_ as e,o as l,c as s,X as a}from"./chunks/framework.d276e8ea.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"public/x-select/readme.md"}'),t={name:"public/x-select/readme.md"},o=a(`<h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><ol><li><p>在el-select的基础上封的，参数和el-select一模一样，文档直接看element就行，目的是不想写el-option v-for.....，并且支持自己修改下拉列表的样式</p><p>注意：暂时不支持分组结构的下拉</p></li><li><p>v-model改为：value传值，@change函数接收修改的值</p></li><li><p>新增的传值：</p><ol><li>list：就是要渲染的下拉列表</li><li>selectKey：对象-{ label: &#39;&#39;, value: &#39;&#39; }，传的是label的键名，value的键名，例如你的下拉里面是用enterpriseName作为显示的名字，orgCode作为值，就是传{ label: &#39;enterpriseName&#39;, value: &#39;orgCode&#39; }，另外default-list已经内置了默认的键，可以直接在上面增加自己想要的，后续会遍历自己加上，需要注意的是，判断的依据是label，所以不要传重复的</li><li>dictListAllKey：这个就是我们store里面的字典的名字，例如传了AlarmLevel，就会去取store.getters.dictListAll.AlarmLevel，如果不存在字典，则使用list</li></ol></li><li><p>默认可搜索，且下拉列表的宽度和下拉框一致</p></li><li><p>关于样式直接在下拉框上面定义一个class就行了，具体修改样式可以参考x-select/index.less里面的默认样式<code>default-x-select</code>，自己复制粘贴过去改</p></li><li><p>默认的下拉是store.getters.enterpriseList（企业下拉），如果store没有这个，则默认的就是【是、否】下拉</p></li></ol><p>例子：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">x-select</span></span>
<span class="line"><span style="color:#89DDFF;">  :value=&quot;form.orgCode&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">全部企业</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  @change=&quot;val =&gt; form.orgCode = val&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span></code></pre></div>`,4),n=[o];function p(r,c,i,d,_,u){return l(),s("div",null,n)}const F=e(t,[["render",p]]);export{D as __pageData,F as default};
